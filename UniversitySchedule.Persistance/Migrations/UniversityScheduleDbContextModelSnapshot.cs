// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversitySchedule.Persistance;

#nullable disable

namespace UniversitySchedule.Persistance.Migrations
{
    [DbContext(typeof(UniversityScheduleDbContext))]
    partial class UniversityScheduleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.23");

            modelBuilder.Entity("UniversitySchedule.Domain.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("TEXT");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("UniversitySchedule.Domain.Models.Lecture", b =>
                {
                    b.Property<int>("LectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsEvenWeek")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LectureRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("INTEGER");

                    b.HasKey("LectureId");

                    b.HasIndex("GroupId");

                    b.HasIndex("LectureRoomId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("UniversitySchedule.Domain.Models.LectureRoom", b =>
                {
                    b.Property<int>("LectureRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LectureRoomNumber")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.HasKey("LectureRoomId");

                    b.ToTable("LectureRooms");
                });

            modelBuilder.Entity("UniversitySchedule.Domain.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("UniversitySchedule.Domain.Models.Lecture", b =>
                {
                    b.HasOne("UniversitySchedule.Domain.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("UniversitySchedule.Domain.Models.LectureRoom", "LectureRoom")
                        .WithMany()
                        .HasForeignKey("LectureRoomId");

                    b.HasOne("UniversitySchedule.Domain.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Group");

                    b.Navigation("LectureRoom");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
